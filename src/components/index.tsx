/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/XzYTzNSWytN
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Libre_Baskerville } from 'next/font/google'

libre_baskerville({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import Link from "next/link"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Card } from "@/components/ui/card"
import { CarouselItem, CarouselContent, CarouselPrevious, CarouselNext, Carousel } from "@/components/ui/carousel"
import React, {useCallback, useState} from 'react';
import { fetchSearchResults } from '@/app/api/api';
import { Item } from "@/app/api/api";
import { fetchKeywordSuggestions } from '@/app/api/api';
// import "@/mockjs/index";//引入mockjs


export function Index() {
  const [data, setData] = useState<Item[]>([]);
  // const [keyword, setKeyword] = useState<string>('');
  const handleSearch = async (event?: React.FormEvent<HTMLFormElement>) => {
    // Prevent the form from being submitted if an event object was provided
    event?.preventDefault();

    // If event is undefined, use the current keyword state
    const keywords = event ? (event.currentTarget.elements[0] as HTMLInputElement).value : keyword;

    try {
      // 先将data状态设置为一个空数组
      setData([]);
      const results = await fetchSearchResults(keyword, "1", 10);
      if (!Array.isArray(results.data)) {
        throw new Error('fetchSearchResults did not return an array');
      }

      // Merge all the list arrays into one array
      const data = results.data.reduce((acc: Item[], item: { list: Item[] | null }) => acc.concat(item.list || []), []);
      setData(data);
    } catch (error) {
      console.error('Error fetching search results:', error);
    }
  };
  // Debounce function to delay the execution
  const debounce = (func: Function, delay: number) => {
    let timeoutId: NodeJS.Timeout;
    return (...args: any[]) => {
      if (timeoutId) clearTimeout(timeoutId);
      timeoutId = setTimeout(() => {
        func(...args);
      }, delay);
    };
  };

  const handleInputChange = async (event: React.ChangeEvent<HTMLInputElement>) => {
    const newKeyword = event.target.value;
    setKeyword(newKeyword);

    if (newKeyword) {
      debouncedFetchSuggestions(newKeyword);
    } else {
      setSuggestions([]);
    }
  };

  const fetchSuggestions = async (keyword: string) => {
    const newSuggestions = await fetchKeywordSuggestions(keyword);
    setSuggestions(newSuggestions);
  };

  // Create a debounced version of fetchSuggestions
  const debouncedFetchSuggestions = useCallback(debounce(fetchSuggestions, 500), []);

  const [suggestions, setSuggestions] = useState<string[]>([]);
  const [keyword, setKeyword] = useState<string>('');

  const handleSuggestionClick = (suggestion: string) => {
    setKeyword(suggestion); // 将点击的联想词填入搜索框
    setSuggestions([]); // 清空联想词
    handleSearch().then(r => console.log(r)); // 执行搜索
  };

  React.useEffect(() => {
    const fetchSuggestions = async () => {
      const result = await fetchKeywordSuggestions('');
      setSuggestions(result);
    };
    fetchSuggestions().then(r => console.log(r));
  }, []);

  // @ts-ignore
  return (
      <div className="flex flex-col min-h-screen">
        <header className="bg-gray-950 text-gray-50 px-4 md:px-6 py-3 flex items-center justify-between">
          <Link className="flex items-center gap-2 font-bold text-lg" href="#">
            <FanIcon className="w-6 h-6" />
            <span>Anime Hub</span>
          </Link>
          <nav className="hidden md:flex items-center gap-6">
            <Link className="hover:underline" href="#">
              trending
            </Link>
            <Link className="hover:underline" href="#">
              Subscriptions
            </Link>
            <Link href="/api/auth/login">
              <Button className="bg-[#ff6b6b] text-white hover:bg-[#ff4d4d]">
                Sign In
              </Button>
            </Link>
          </nav>
          <Button className="md:hidden" size="icon" variant="ghost">
            <MenuIcon className="w-6 h-6" />
            <span className="sr-only">Toggle menu</span>
          </Button>
        </header>
        <main className="flex-1">
          <section className="bg-gray-950 text-gray-50 py-12 md:py-24 px-4 md:px-6 flex flex-col items-center justify-center">
            <h1 className="text-4xl md:text-6xl font-bold tracking-tighter">Welcome to Anime Hub</h1>
            <p className="text-lg md:text-xl mt-4 max-w-2xl text-center">
              Discover the latest and greatest anime series, movies, and more.
            </p>
          <form className="mt-8 w-full max-w-xl" onSubmit={handleSearch}>
            <div className="relative">
              {/* 搜索框 */}
              <SearchIcon className="absolute left-4 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400"/>
              <Input
                  className="bg-gray-800 border-gray-700 text-gray-50 pl-12 pr-4 py-3 rounded-full w-full focus:outline-none focus:ring-2 focus:ring-gray-700 relative z-10"
                  placeholder="Search for anime..."
                  type="search"
                  value={keyword}
                  onChange={handleInputChange}
              />

              {/* 联想词 */}
              {suggestions.length > 0 && (
                  <div
                      className="absolute top-full left-0 w-full bg-gray-800 border border-gray-700 divide-y divide-gray-700 rounded-lg mt-1 z-10">
                    {suggestions.map((suggestion, index) => (
                        <div
                            key={index}
                            className="p-2 text-white hover:bg-gray-700 cursor-pointer"
                            onClick={() => handleSuggestionClick(suggestion)}
                        >
                          {suggestion}
                        </div>
                    ))}
                  </div>
              )}
            </div>
          </form>


        </section>
        <section className="py-12 md:py-24 px-4 md:px-6">
          <div className="flex items-center justify-between mb-8">
            <h2 className="text-2xl md:text-3xl font-bold">Search results</h2>
            <Link className="text-sm md:text-base hover:underline" href="#">
              View all
            </Link>
          </div>
          <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
            {data.map((item) => (
                <Card className="group" key={item.id}>
                  <Link href={`https://www.olevod.tv/player/vod/${item.typeId1}-${item.id}-1.html`}>
                    <img
                        alt={item.name}
                        className="rounded-lg object-cover w-full aspect-[2/3] group-hover:opacity-80 transition-opacity"
                        height="300"
                        src={`https://www.olevod.tv/${item.picThumb}`}
                        width="200"
                    />
                    <div className="mt-4">
                      <h3 className="text-lg font-bold">{item.name}</h3>
                      <p className="text-gray-400 text-sm">{item.blurb}</p>
                    </div>
                  </Link>
                </Card>
            ))}
          </div>
        </section>

        {/*<section className="py-12 md:py-24 px-4 md:px-6">*/}
        {/*  <div className="flex items-center justify-between mb-8">*/}
        {/*    <h2 className="text-2xl md:text-3xl font-bold">Recently Added</h2>*/}
        {/*    <Link className="text-sm md:text-base hover:underline" href="#">*/}
        {/*      View all*/}
        {/*    </Link>*/}
        {/*  </div>*/}
        {/*  <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">*/}
        {/*    <Card className="group">*/}
        {/*      <Link href="#">*/}
        {/*        <img*/}
        {/*          alt="Blue Lock"*/}
        {/*          className="rounded-lg object-cover w-full aspect-[2/3] group-hover:opacity-80 transition-opacity"*/}
        {/*          height="300"*/}
        {/*          src="/placeholder.svg"*/}
        {/*          width="200"*/}
        {/*        />*/}
        {/*        <div className="mt-4">*/}
        {/*          <h3 className="text-lg font-bold">Blue Lock</h3>*/}
        {/*          <p className="text-gray-400 text-sm">Sports, Drama</p>*/}
        {/*        </div>*/}
        {/*      </Link>*/}
        {/*    </Card>*/}
        {/*    <Card className="group">*/}
        {/*      <Link href="#">*/}
        {/*        <img*/}
        {/*          alt="The Eminence in Shadow"*/}
        {/*          className="rounded-lg object-cover w-full aspect-[2/3] group-hover:opacity-80 transition-opacity"*/}
        {/*          height="300"*/}
        {/*          src="/placeholder.svg"*/}
        {/*          width="200"*/}
        {/*        />*/}
        {/*        <div className="mt-4">*/}
        {/*          <h3 className="text-lg font-bold">The Eminence in Shadow</h3>*/}
        {/*          <p className="text-gray-400 text-sm">Action, Comedy</p>*/}
        {/*        </div>*/}
        {/*      </Link>*/}
        {/*    </Card>*/}
        {/*    <Card className="group">*/}
        {/*      <Link href="#">*/}
        {/*        <img*/}
        {/*          alt="Mob Psycho 100"*/}
        {/*          className="rounded-lg object-cover w-full aspect-[2/3] group-hover:opacity-80 transition-opacity"*/}
        {/*          height="300"*/}
        {/*          src="/placeholder.svg"*/}
        {/*          width="200"*/}
        {/*        />*/}
        {/*        <div className="mt-4">*/}
        {/*          <h3 className="text-lg font-bold">Mob Psycho 100</h3>*/}
        {/*          <p className="text-gray-400 text-sm">Action, Comedy, Supernatural</p>*/}
        {/*        </div>*/}
        {/*      </Link>*/}
        {/*    </Card>*/}
        {/*    <Card className="group">*/}
        {/*      <Link href="#">*/}
        {/*        <img*/}
        {/*          alt="Bleach: Thousand-Year Blood War"*/}
        {/*          className="rounded-lg object-cover w-full aspect-[2/3] group-hover:opacity-80 transition-opacity"*/}
        {/*          height="300"*/}
        {/*          src="/placeholder.svg"*/}
        {/*          width="200"*/}
        {/*        />*/}
        {/*        <div className="mt-4">*/}
        {/*          <h3 className="text-lg font-bold">Bleach: Thousand-Year Blood War</h3>*/}
        {/*          <p className="text-gray-400 text-sm">Action, Supernatural</p>*/}
        {/*        </div>*/}
        {/*      </Link>*/}
        {/*    </Card>*/}
        {/*  </div>*/}
        {/*</section>*/}

        {/*<section className="py-12 md:py-24 px-4 md:px-6">*/}
        {/*  <div className="flex items-center justify-between mb-8">*/}
        {/*    <h2 className="text-2xl md:text-3xl font-bold">Anime Recommendations</h2>*/}
        {/*    <Link className="text-sm md:text-base hover:underline" href="#">*/}
        {/*      View all*/}
        {/*    </Link>*/}
        {/*  </div>*/}
        {/*  <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">*/}
        {/*    <Card className="group">*/}
        {/*      <Link href="#">*/}
        {/*        <img*/}
        {/*          alt="One Piece"*/}
        {/*          className="rounded-lg object-cover w-full aspect-[2/3] group-hover:opacity-80 transition-opacity"*/}
        {/*          height="300"*/}
        {/*          src="/placeholder.svg"*/}
        {/*          width="200"*/}
        {/*        />*/}
        {/*        <div className="mt-4">*/}
        {/*          <h3 className="text-lg font-bold">One Piece</h3>*/}
        {/*          <p className="text-gray-400 text-sm">Action, Adventure, Fantasy</p>*/}
        {/*        </div>*/}
        {/*      </Link>*/}
        {/*    </Card>*/}
        {/*    <Card className="group">*/}
        {/*      <Link href="#">*/}
        {/*        <img*/}
        {/*          alt="Naruto"*/}
        {/*          className="rounded-lg object-cover w-full aspect-[2/3] group-hover:opacity-80 transition-opacity"*/}
        {/*          height="300"*/}
        {/*          src="/placeholder.svg"*/}
        {/*          width="200"*/}
        {/*        />*/}
        {/*        <div className="mt-4">*/}
        {/*          <h3 className="text-lg font-bold">Naruto</h3>*/}
        {/*          <p className="text-gray-400 text-sm">Action, Adventure, Martial Arts</p>*/}
        {/*        </div>*/}
        {/*      </Link>*/}
        {/*    </Card>*/}
        {/*    <Card className="group">*/}
        {/*      <Link href="#">*/}
        {/*        <img*/}
        {/*          alt="Dragon Ball Z"*/}
        {/*          className="rounded-lg object-cover w-full aspect-[2/3] group-hover:opacity-80 transition-opacity"*/}
        {/*          height="300"*/}
        {/*          src="/placeholder.svg"*/}
        {/*          width="200"*/}
        {/*        />*/}
        {/*        <div className="mt-4">*/}
        {/*          <h3 className="text-lg font-bold">Dragon Ball Z</h3>*/}
        {/*          <p className="text-gray-400 text-sm">Action, Adventure, Fantasy</p>*/}
        {/*        </div>*/}
        {/*      </Link>*/}
        {/*    </Card>*/}
        {/*    <Card className="group">*/}
        {/*      <Link href="#" />*/}
        {/*    </Card>*/}
        {/*  </div>*/}
        {/*</section>*/}
      </main>
    </div>
  )
}

function FanIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
      <svg
          {...props}
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
      >
        <path d="M10.827 16.379a6.082 6.082 0 0 1-8.618-7.002l5.412 1.45a6.082 6.082 0 0 1 7.002-8.618l-1.45 5.412a6.082 6.082 0 0 1 8.618 7.002l-5.412-1.45a6.082 6.082 0 0 1-7.002 8.618l1.45-5.412Z" />
      <path d="M12 12v.01" />
    </svg>
  )
}


function MenuIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <line x1="4" x2="20" y1="12" y2="12" />
      <line x1="4" x2="20" y1="6" y2="6" />
      <line x1="4" x2="20" y1="18" y2="18" />
    </svg>
  )
}


function SearchIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="11" cy="11" r="8" />
      <path d="m21 21-4.3-4.3" />
    </svg>
  )
}
export { FanIcon, MenuIcon, SearchIcon };
